@page "/ciudadform"
@page "/ciudadform/{Id:int}"

@using Data

@inject CiudadService CiudadService
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<h1>Formulario de Ciudades</h1>

<br />

<EditForm Model="@c" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="container-fluid">
        <div class="form-group row mb-1">
            <label class="col-sm-3">Nombre</label>
            <div class="col-sm-6">
                <InputText class="form-control" @bind-Value="c.NombreCiudad"></InputText>
                <ValidationMessage For="@(() => c.NombreCiudad)"></ValidationMessage>
            </div>
        </div>
        <br />
        <div class="form-group row mb-1">
            <div class="col-sm-12">
                <button class="btn btn-primary" @onclick="Regresar">Cancelar</button>
                <button type="submit" class="btn btn-primary" value="Guardar">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    CiudadModelo c = new CiudadModelo();
    List<CiudadModelo> ciudades = new List<CiudadModelo>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id != 0)
            {
                CiudadModelo ciudad = new CiudadModelo();
                ciudad.Codigo = "4";
                ciudad.IDCiudad = Id.ToString();
                ciudad.Token = await sessionStorage.GetItemAsync<string>("token_ciudad");
                ciudades = await CiudadService.CrudCiudad(ciudad);
                c = ciudades.First();
            }
            StateHasChanged();
        }
    }

    private async Task Guardar()
    {
        if (Id != 0)
        {
            c.Codigo = "2";
            c.Token = await sessionStorage.GetItemAsync<string>("token_ciudad");
            await CiudadService.CrudCiudad(c);
        }
        else
        {
            c.Codigo = "1";
            c.Token = await sessionStorage.GetItemAsync<string>("token_ciudad");
            await CiudadService.CrudCiudad(c);
        }
        NavigationManager.NavigateTo("/ciudadpage");
    }

    private void Regresar()
    {
        NavigationManager.NavigateTo("/ciudadpage");
    }
}

